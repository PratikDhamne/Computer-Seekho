// <auto-generated />
using System;
using ComputerSeekho.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComputerSeekho.Migrations
{
    [DbContext(typeof(Appdbcontext))]
    [Migration("20240814084545_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ComputerSeekho.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("album_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumId"));

                    b.Property<string>("AlbumDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("album_description");

                    b.Property<bool?>("AlbumIsActive")
                        .HasColumnType("bit")
                        .HasColumnName("album_is_active");

                    b.Property<string>("AlbumName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("album_name");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.HasKey("AlbumId");

                    b.ToTable("AlbumMaster");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Batch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("batch_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchId"));

                    b.Property<DateTime?>("BatchEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("batch_end_date");

                    b.Property<float?>("BatchFees")
                        .HasColumnType("real")
                        .HasColumnName("batch_fees");

                    b.Property<bool?>("BatchIsActive")
                        .HasColumnType("bit")
                        .HasColumnName("batch_is_active");

                    b.Property<string>("BatchName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("batch_name");

                    b.Property<DateTime?>("BatchStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("batch_start_date");

                    b.Property<DateTime?>("CourseFeesFrom")
                        .HasColumnType("datetime2")
                        .HasColumnName("course_fees_from");

                    b.Property<DateTime?>("CourseFeesTo")
                        .HasColumnType("datetime2")
                        .HasColumnName("course_fees_to");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("FinalPresentationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("final_presentation_date");

                    b.HasKey("BatchId");

                    b.HasIndex("CourseId");

                    b.ToTable("Batch");
                });

            modelBuilder.Entity("ComputerSeekho.Models.ClosureReason", b =>
                {
                    b.Property<int>("ClosureReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("closure_reason_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClosureReasonId"));

                    b.Property<string>("ClosureReasonDesc")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("closure_reason_desc");

                    b.HasKey("ClosureReasonId");

                    b.ToTable("ClosureReasonMaster");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("AgeGrpType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("age_grp_type");

                    b.Property<string>("CourseDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("course_description");

                    b.Property<int?>("CourseDuration")
                        .HasColumnType("int")
                        .HasColumnName("course_duration");

                    b.Property<bool?>("CourseIsActive")
                        .HasColumnType("bit")
                        .HasColumnName("course_is_active");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("course_name");

                    b.Property<string>("CourseSyllabus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("course_syllabus");

                    b.Property<string>("CoverPhoto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cover_photo");

                    b.Property<int?>("VideoId")
                        .HasColumnType("int")
                        .HasColumnName("video_id");

                    b.HasKey("CourseId");

                    b.HasIndex("VideoId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Enquiry", b =>
                {
                    b.Property<int>("EnquiryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("enquiryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnquiryId"));

                    b.Property<string>("ClosureReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("closure_reason");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<string>("EnquirerAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("enquirer_address");

                    b.Property<string>("EnquirerAlternateMobile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("enquirer_alternate_mobile");

                    b.Property<string>("EnquirerEmailId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("enquirer_emailid");

                    b.Property<string>("EnquirerMobile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("enquirer_mobile");

                    b.Property<string>("EnquirerName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("enquirer_name");

                    b.Property<string>("EnquirerQuery")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("enquirer_query");

                    b.Property<int?>("EnquiryCounter")
                        .HasColumnType("int")
                        .HasColumnName("enquiry_counter");

                    b.Property<DateTime?>("EnquiryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("enquiry_date");

                    b.Property<bool?>("EnquiryProcessedFlag")
                        .HasColumnType("bit")
                        .HasColumnName("enquiry_processed_flag");

                    b.Property<DateTime?>("FollowUpDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("followup_date");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("staff_id");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("student_name");

                    b.HasKey("EnquiryId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StaffId");

                    b.ToTable("Enquiry");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Followup", b =>
                {
                    b.Property<int>("FollowupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("followupid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FollowupId"));

                    b.Property<int?>("EnquiryId")
                        .HasColumnType("int")
                        .HasColumnName("enquiry_id");

                    b.Property<DateTime?>("FollowupDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("followup_date");

                    b.Property<string>("FollowupMsg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("followup_msg");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("staff_id");

                    b.HasKey("FollowupId");

                    b.HasIndex("EnquiryId");

                    b.HasIndex("StaffId");

                    b.ToTable("Followup");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("image_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<int?>("AlbumId")
                        .HasColumnType("int")
                        .HasColumnName("album_id");

                    b.Property<bool?>("ImageIsActive")
                        .HasColumnType("bit")
                        .HasColumnName("image_is_active");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image_path");

                    b.Property<bool?>("IsAlbumCover")
                        .HasColumnType("bit")
                        .HasColumnName("is_album_cover");

                    b.HasKey("ImageId");

                    b.HasIndex("AlbumId");

                    b.ToTable("ImageMaster");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("paymentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<int?>("BatchId")
                        .HasColumnType("int")
                        .HasColumnName("batch_id");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("payment_date");

                    b.Property<int?>("PaymentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("payment_type_id");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.HasKey("PaymentId");

                    b.HasIndex("BatchId");

                    b.HasIndex("CourseId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("StudentId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("ComputerSeekho.Models.PaymentType", b =>
                {
                    b.Property<int>("PaymentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payment_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentTypeId"));

                    b.Property<string>("PaymentTypeDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payment_type_desc");

                    b.HasKey("PaymentTypeId");

                    b.ToTable("PaymentTypeMaster");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Receipt", b =>
                {
                    b.Property<int>("ReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("receipt_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiptId"));

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    b.Property<double?>("ReceiptAmount")
                        .HasColumnType("float")
                        .HasColumnName("receipt_amount");

                    b.Property<DateTime?>("ReceiptDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("receipt_date");

                    b.HasKey("ReceiptId");

                    b.HasIndex("PaymentId");

                    b.ToTable("receipt");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("staff_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("photo_url");

                    b.Property<string>("StaffEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("staff_email");

                    b.Property<string>("StaffMobile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("staff_mobile");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("staff_name");

                    b.Property<string>("StaffPassword")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("staff_password");

                    b.Property<string>("StaffRole")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("staff_role");

                    b.Property<string>("StaffUsername")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("staff_username");

                    b.HasKey("StaffId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int?>("BatchId")
                        .HasColumnType("int")
                        .HasColumnName("batch_id");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("photo_url");

                    b.Property<string>("StudentAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("student_address");

                    b.Property<DateTime?>("StudentDob")
                        .HasColumnType("datetime2")
                        .HasColumnName("student_dob");

                    b.Property<string>("StudentGender")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("student_gender");

                    b.Property<string>("StudentMobile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("student_mobile");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("student_name");

                    b.Property<string>("StudentQualification")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("student_qualification");

                    b.HasKey("StudentId");

                    b.HasIndex("BatchId");

                    b.HasIndex("CourseId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Video", b =>
                {
                    b.Property<int>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("video_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VideoId"));

                    b.Property<int?>("AlbumId")
                        .HasColumnType("int")
                        .HasColumnName("album_id");

                    b.Property<bool?>("IsAlbumCover")
                        .HasColumnType("bit")
                        .HasColumnName("is_album_cover");

                    b.Property<bool?>("VideoIsActive")
                        .HasColumnType("bit")
                        .HasColumnName("video_is_active");

                    b.Property<string>("VideoPath")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("video_path");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("video_url");

                    b.HasKey("VideoId");

                    b.HasIndex("AlbumId");

                    b.ToTable("VideoMaster");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Batch", b =>
                {
                    b.HasOne("ComputerSeekho.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Course", b =>
                {
                    b.HasOne("ComputerSeekho.Models.Video", "Video")
                        .WithMany("Courses")
                        .HasForeignKey("VideoId");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Enquiry", b =>
                {
                    b.HasOne("ComputerSeekho.Models.Course", "Course")
                        .WithMany("Enquiries")
                        .HasForeignKey("CourseId");

                    b.HasOne("ComputerSeekho.Models.Staff", "Staff")
                        .WithMany("Enquiries")
                        .HasForeignKey("StaffId");

                    b.Navigation("Course");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Followup", b =>
                {
                    b.HasOne("ComputerSeekho.Models.Enquiry", "Enquiry")
                        .WithMany()
                        .HasForeignKey("EnquiryId");

                    b.HasOne("ComputerSeekho.Models.Staff", "Staff")
                        .WithMany("Followups")
                        .HasForeignKey("StaffId");

                    b.Navigation("Enquiry");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Image", b =>
                {
                    b.HasOne("ComputerSeekho.Models.Album", "Album")
                        .WithMany()
                        .HasForeignKey("AlbumId");

                    b.Navigation("Album");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Payment", b =>
                {
                    b.HasOne("ComputerSeekho.Models.Batch", "Batch")
                        .WithMany()
                        .HasForeignKey("BatchId");

                    b.HasOne("ComputerSeekho.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.HasOne("ComputerSeekho.Models.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId");

                    b.HasOne("ComputerSeekho.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Batch");

                    b.Navigation("Course");

                    b.Navigation("PaymentType");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Receipt", b =>
                {
                    b.HasOne("ComputerSeekho.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Student", b =>
                {
                    b.HasOne("ComputerSeekho.Models.Batch", "Batch")
                        .WithMany()
                        .HasForeignKey("BatchId");

                    b.HasOne("ComputerSeekho.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.Navigation("Batch");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Video", b =>
                {
                    b.HasOne("ComputerSeekho.Models.Album", "Album")
                        .WithMany()
                        .HasForeignKey("AlbumId");

                    b.Navigation("Album");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Course", b =>
                {
                    b.Navigation("Enquiries");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Staff", b =>
                {
                    b.Navigation("Enquiries");

                    b.Navigation("Followups");
                });

            modelBuilder.Entity("ComputerSeekho.Models.Video", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
